{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishe\\\\data-processor-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function FileUpload() {\n//     const [selectedFile, setSelectedFile] = useState(null);\n\n//     const handleFileSelect = (event) => {\n//         setSelectedFile(event.target.files[0]);\n//     }\n\n//     const handleUpload = async () => {\n//         const formData = new FormData();\n//         formData.append('file', selectedFile);\n\n//         try {\n//             const response = await axios.post('/upload/', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data'\n//                 }\n//             });\n//             console.log('File uploaded:', response.data);\n//         } catch (error) {\n//             console.error('Error uploading file:', error);\n//         }\n//     }\n\n//     return (\n//         <div>\n//             <input type=\"file\" onChange={handleFileSelect} />\n//             <button onClick={handleUpload}>Upload</button>\n//         </div>\n//     );\n// }\n\n// export default FileUpload;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [dataFrame, setDataFrame] = useState([]); // State to hold the DataFrame data\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post('/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('File uploaded:', response.data);\n      setDataFrame(JSON.parse(response.data.data)); // Assuming the backend returns JSON under the 'data' key\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataFrame.length > 0 && dataFrame.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.entries(row).map(([key, value], idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `${key}: ${value}`\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"BnRzOFUmG2UrFc6XuafoTaqYEtU=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","dataFrame","setDataFrame","handleFileSelect","event","target","files","handleUpload","formData","FormData","append","response","post","headers","console","log","data","JSON","parse","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","row","index","Object","entries","key","value","idx","_c","$RefreshReg$"],"sources":["C:/Users/vishe/data-processor-frontend/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function FileUpload() {\n//     const [selectedFile, setSelectedFile] = useState(null);\n\n//     const handleFileSelect = (event) => {\n//         setSelectedFile(event.target.files[0]);\n//     }\n\n//     const handleUpload = async () => {\n//         const formData = new FormData();\n//         formData.append('file', selectedFile);\n\n//         try {\n//             const response = await axios.post('/upload/', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data'\n//                 }\n//             });\n//             console.log('File uploaded:', response.data);\n//         } catch (error) {\n//             console.error('Error uploading file:', error);\n//         }\n//     }\n\n//     return (\n//         <div>\n//             <input type=\"file\" onChange={handleFileSelect} />\n//             <button onClick={handleUpload}>Upload</button>\n//         </div>\n//     );\n// }\n\n// export default FileUpload;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction FileUpload() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [dataFrame, setDataFrame] = useState([]); // State to hold the DataFrame data\n\n    const handleFileSelect = (event) => {\n        setSelectedFile(event.target.files[0]);\n    }\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n\n        try {\n            const response = await axios.post('/upload/', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            console.log('File uploaded:', response.data);\n            setDataFrame(JSON.parse(response.data.data)); // Assuming the backend returns JSON under the 'data' key\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    }\n\n    return (\n        <div>\n            <input type=\"file\" onChange={handleFileSelect} />\n            <button onClick={handleUpload}>Upload</button>\n            <div>\n                <table>\n                    <tbody>\n                        {dataFrame.length > 0 && dataFrame.map((row, index) => (\n                            <tr key={index}>\n                                {Object.entries(row).map(([key, value], idx) => (\n                                    <td key={idx}>{`${key}: ${value}`}</td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default FileUpload;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}