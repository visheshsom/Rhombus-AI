{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishe\\\\data-processor-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [dataFrame, setDataFrame] = useState([]); // Initialize as an empty array\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  useEffect(() => {\n    // This useEffect will log every time dataFrame changes.\n    console.log('DataFrame state:', dataFrame);\n  }, [dataFrame]);\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post('/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Raw response:', response.data);\n      console.log('DataFrame state:', dataFrame);\n      setDataFrame(response.data); // Assuming the backend returns an array directly\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: dataFrame.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(dataFrame[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataFrame.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((value, valueIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value !== null ? value : \"N/A\"\n            }, valueIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 41\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"nOkvm6Ow7Yyo0mq7VyTJ/SRQO58=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","dataFrame","setDataFrame","handleFileSelect","event","target","files","console","log","handleUpload","formData","FormData","append","response","post","headers","data","error","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","Object","keys","map","key","index","row","rowIndex","values","value","valueIndex","_c","$RefreshReg$"],"sources":["C:/Users/vishe/data-processor-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n\nfunction FileUpload() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [dataFrame, setDataFrame] = useState([]); // Initialize as an empty array\n\n    const handleFileSelect = (event) => {\n        setSelectedFile(event.target.files[0]);\n    };\n  \n    useEffect(() => { // This useEffect will log every time dataFrame changes.\n        console.log('DataFrame state:', dataFrame);\n    }, [dataFrame]);\n\n    \n    const handleUpload = async () => {\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n\n        try {\n            const response = await axios.post('/upload/', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            console.log('Raw response:', response.data); \n            console.log('DataFrame state:', dataFrame);\n\n            setDataFrame(response.data); // Assuming the backend returns an array directly\n\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <input type=\"file\" onChange={handleFileSelect} />\n            <button onClick={handleUpload}>Upload</button>\n            <div className=\"table-container\">\n                {dataFrame.length > 0 ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                {/* Create table headers dynamically from the first row keys */}\n                                {Object.keys(dataFrame[0]).map((key, index) => (\n                                    <th key={index}>{key}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {/* Create table rows dynamically */}\n                            {dataFrame.map((row, rowIndex) => (\n                                <tr key={rowIndex}>\n                                    {Object.values(row).map((value, valueIndex) => (\n                                        <td key={valueIndex}>{value !== null ? value : \"N/A\"}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                ) : (\n                    <p>No data to display</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}